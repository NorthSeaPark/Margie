Keep programming every day.
Make programming as a habit.
------------------------------------------------------------------------------------
Typedef:
typedef struct Books {
   char title[50];
   char author[50];
   char subject[100];
   int book_id;
} Book;
-------------------------------------------------------------------------------------

free, malloc, relloc fuctions

---------------------------------------------------------------------------------------
Insert node in order
|-----|     |-----|
|--2--|---->|--4--|
|-----|     |-----|
This is the basic situation
Case 1:
*if the next node of head is NULL or the the value of head is larger than the insert value
Then, we adjust
Case 2:
*if the next node of head is not NULL and the insert value is larger than the head
Then,
We loop the list_nodes until we find the nodes which is larger than the insert value (or we just directly go to the end)
----------------------------------------------------------------------------------------
function pointer example:

float multi (float num1, float num2){
	return num1 * num2;
}

typedef float(*pt2Func)(float, float);

Create a pointer points to multi

pt2Func *myFnPtr = &multi;

float result = (*myFnPtr)(2.0,5.1);
----------------------------------------------------------------------------------------
%p address of the pointer or any other variable
----------------------------------------------------------
void always means a pointer
-----------------------------------------------------------------------------------------
This how we compare the first n characters of the string in c
char str1[] = "asshole";
char str2[] = "bitch";
printf("%d\n", strncmp(str1, str2, 1));
-----------------------------------------------------------------------------------------
fprintf is used to write set of characters into the file
int main () {
	FILE * fp;
	fp = fopen ("file.txt", "w+");
	fprintf(fp, "%s %s %s %d", "We", "are", "in", 2012);
	fclose(fp);
	return(0);
}
fscanf is used to read from file
int main(){
	File * fp;
	fp = fopen("file.txt","r+");
	fscanf(fp,"%s",str1);
	fclose(fp);
	return(0);
}
-------------------------------------------------------------------------------------------
p1: p1.o libasteroids.h
	gcc -o p1 p1.o -L. -lasteroids -lncurses
p1.o: p1.c libasteroids.h
	gcc -ansi -pedantic -c p1.c

lab3.zip: Makefile lab3.c p1.c p2.c p3.c p4.c README_LAB3 libasteroids.h libasteroids.a
	zip lab3.zip Makefile lab3.c p1.c p2.c p3.c p4.c README_LAB3 libasteroids.h libasteroids.a

The name of Makefile should always named "Makefile"
--------------------------------------------------------------------------------------------
Command-line arguments are given after the name of the program in command-line shell of Operating Systems. To pass command line arguments, we typically define main() with two arguments : first argument is the number of command line arguments and second is list of command-line arguments.

int main(int argc, char *argv[]) { /* ... */ }
----------------------------------------------------------------------------------------------------
command for C++ on windows:
g++ card_prob.cpp -o card

关于那一个绝望又傻逼的演讲：

一些会提到的主题：
Arab Spring, Social Network, 社交网络对于人们的影响, consequencailism, Law of Nature
(1)讲述一下Arab Spring的背景
(2)介绍一下Whael的两篇演讲的不同
(3)引出我的问题：政府是否应该控制人们在网上的言论。
(4)现在引出正方还有反方
正方：言论自由的哲学本质，以及言论自由给社会带来的好处。
反方：law of nature, 康德，萨特，海德格尔
(5)政府对于言论的控制
5 rules on internet，暴徒算法
举例：香港事件
1.中国政府
2.西方媒体
(6)我的观点：应该控制
从而引出对于 一个社交网络 设计的思考
(7)总结

哲学元素：
康德： 将他人视为手段或者目的
哈马贝斯：工具性行动
戈夫曼：自我呈现理论
actants: 行动元
萨特：存在投射
海德格尔：共享世界
------------------------------------------------------------------------------------------------------------
CSE 5522
Office Hour: 
Wed: 3PM
Thurs: 1PM
Final:
4-6PM

HW2 Question 8 solved

Understand the KL formula

对了，我们再说说操蛋的Decision Tree
最重要的是entrophy

I(P(V1)to P(Vn)) = 1 to n SUM (-P(vi)log2P(vi))
Gain(T,X) = Entropy(T) - Entropy(T,X)

If the sample is completely homogeneous the entropy is zero
and if the sample is equally divided then it has entropy of one.

Information gain: The information gain is based on the derease in 
entropy after a data-set is split on an attribute. Decision tree need
to find the highest information gain

Step one: Calculate the entropy of the target

Step two:The resulting entropy is substracted from the entropy before the split

Choose the attribute with the largest information gain as decision node.
Divide the branch and repeat the same process.






